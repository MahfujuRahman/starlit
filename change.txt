web.php
Route::get('/news', 'FrontendController\NewsController@index')->name('news');
Route::get('/news/details/{slug}', 'FrontendController\NewsController@news_details')->name('news_details');
Route::get('/news/category/{slug}', 'FrontendController\NewsController@news_category')->name('news_category');
Route::get('/ajax/blog/search', 'FrontendController\NewsController@ajaxSearch')->name('ajax.blog.search');

Route::get('/contact', 'FrontendController\ContactController@index')->name('contact');
Route::post('/contact', 'FrontendController\ContactController@store')->name('contact.store');
-------
NewsController
<?php

namespace App\Http\Controllers\FrontendController;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class NewsController extends Controller
{
    public function index()
    {
        $blog_category = DB::table('blog_categories')
            ->leftJoin('blogs', 'blog_categories.id', '=', 'blogs.blog_category_id')
            ->select('blog_categories.*', DB::raw('COUNT(blogs.id) as blog_count'))
            ->groupBy('blog_categories.id')
            ->orderBy('blog_count', 'desc')
            ->get();


        $blogs = DB::table("blogs")
            ->join('blog_categories', 'blogs.blog_category_id', '=', 'blog_categories.id')
            ->select('blogs.*', 'blog_categories.title as category_name')
            ->paginate(10);

        $top_rated_blogs_query = DB::table("blogs")
            ->join('blog_categories', 'blogs.blog_category_id', '=', 'blog_categories.id')
            ->select('blogs.*', 'blog_categories.title as category_name');

        $total_blogs = $top_rated_blogs_query->count();

        if ($total_blogs > 5) {
            $top_rated_blogs = $top_rated_blogs_query
                ->inRandomOrder()
                ->limit(5)
                ->get();
        } else {
            $top_rated_blogs = $top_rated_blogs_query->get();
        }


        $latest_blogs = DB::table("blogs")
            ->join('blog_categories', 'blogs.blog_category_id', '=', 'blog_categories.id')
            ->select('blogs.*', 'blog_categories.title as category_name')
            ->orderBy('blogs.created_at', 'desc')
            ->limit(5)
            ->get();

        return view(
            'frontend.pages.news.news',
            compact('blogs', 'blog_category', 'top_rated_blogs', 'latest_blogs')
        );
    }
    
    public function news_details($slug)
    {
        $blog = DB::table('blogs')->where('slug', $slug)->first();

        $blog_category = DB::table('blog_categories')
            ->leftJoin('blogs', 'blog_categories.id', '=', 'blogs.blog_category_id')
            ->select('blog_categories.*', DB::raw('COUNT(blogs.id) as blog_count'))
            ->groupBy('blog_categories.id')
            ->orderBy('blog_count', 'desc')
            ->get();

        $top_rated_blogs_query = DB::table("blogs")
            ->join('blog_categories', 'blogs.blog_category_id', '=', 'blog_categories.id')
            ->select('blogs.*', 'blog_categories.title as category_name');

        $total_blogs = $top_rated_blogs_query->count();

        if ($total_blogs > 5) {
            $top_rated_blogs = $top_rated_blogs_query
                ->inRandomOrder()
                ->limit(5)
                ->get();
        } else {
            $top_rated_blogs = $top_rated_blogs_query->get();
        }


        $latest_blogs = DB::table("blogs")
            ->join('blog_categories', 'blogs.blog_category_id', '=', 'blog_categories.id')
            ->select('blogs.*', 'blog_categories.title as category_name')
            ->orderBy('blogs.created_at', 'desc')
            ->limit(5)
            ->get();

        
        return view('frontend.pages.news.news_details.news_details', 
        compact('top_rated_blogs', 'latest_blogs', 'blog_category','blog'));
    }


    public function news_category($slug)
    {
        $category = DB::table('blog_categories')
            ->where('slug', $slug)
            ->first();

        $blog_category = DB::table('blog_categories')
            ->leftJoin('blogs', 'blog_categories.id', '=', 'blogs.blog_category_id')
            ->select('blog_categories.*', DB::raw('COUNT(blogs.id) as blog_count'))
            ->groupBy('blog_categories.id')
            ->orderBy('blog_count', 'desc')
            ->get();


        $blogs = DB::table("blogs")
            ->join('blog_categories', 'blogs.blog_category_id', '=', 'blog_categories.id')
            ->select('blogs.*', 'blog_categories.title as category_name')
            ->where('blog_categories.slug', $slug)
            ->paginate(10);

        $top_rated_blogs_query = DB::table("blogs")
            ->join('blog_categories', 'blogs.blog_category_id', '=', 'blog_categories.id')
            ->select('blogs.*', 'blog_categories.title as category_name');

        $total_blogs = $top_rated_blogs_query->count();

        if ($total_blogs > 5) {
            $top_rated_blogs = $top_rated_blogs_query
                ->inRandomOrder()
                ->limit(5)
                ->get();
        } else {
            $top_rated_blogs = $top_rated_blogs_query->get();
        }


        $latest_blogs = DB::table("blogs")
            ->join('blog_categories', 'blogs.blog_category_id', '=', 'blog_categories.id')
            ->select('blogs.*', 'blog_categories.title as category_name')
            ->orderBy('blogs.created_at', 'desc')
            ->limit(5)
            ->get();

        return view(
            'frontend.pages.news.news',
            compact('blogs', 'blog_category', 'top_rated_blogs', 'latest_blogs', 'category')
        );
    }

    public function ajaxSearch(Request $request)
    {
        $query = $request->get('search');

        $blogs = DB::table("blogs")
            ->where('title', 'like', "%{$query}%")
            ->limit(10)
            ->get();

        if ($blogs->count() > 0) {
            $output = '';
            foreach ($blogs as $blog) {
                $output .= '<a href="' . route('news_details', $blog->slug) . '">' . e($blog->title) . '</a>';
            }
        } else {
            $output = '<p>No results found</p>';
        }

        return response($output);
    }
}

------

Contact Controller 

<?php

namespace App\Http\Controllers\FrontendController;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use App\Http\Controllers\Controller;

class ContactController extends Controller
{
    public function index()
    {
        return view('frontend.pages.contact.contact');
    }

    public function store(Request $request)
    {
        // Validate the request data
        $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|email|max:255',
            'phone' => 'required|string|max:20',
            'service_type' => 'required|string|max:255',
            'message' => 'required|string',
        ]);

        DB::table('contacts')->insert([
            'name' => $request->name,
            'email' => $request->email,
            'phone_number' => $request->phone,
            'service_types' => $request->service_type,
            'message' => $request->message,
            'created_at' => now(),
        ]);

        // Redirect back with a success message
        return redirect()->route('contact')->with('success', 'Your message has been sent successfully!');
    }
}

=---------------------


